name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
    
    - name: Install shfmt
      run: |
        wget -O shfmt https://github.com/mvdan/sh/raw/master/cmd/shfmt/shfmt_linux_amd64
        chmod +x shfmt
        sudo mv shfmt /usr/local/bin/
    
    - name: Run shellcheck
      run: |
        find scripts/ -name "*.sh" -exec shellcheck {} \;
    
    - name: Run shfmt
      run: |
        shfmt -d scripts/
    
    - name: Check YAML syntax
      run: |
        python -m pip install --upgrade pip
        pip install yamllint
        yamllint config.yaml

  test-dry-run:
    name: Test Dry Run
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        # Install Homebrew
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $GITHUB_ENV
        eval "$(/opt/homebrew/bin/brew shellenv)"
        
        # Install yq for YAML parsing
        brew install yq
    
    - name: Test dry run
      run: |
        ./scripts/setup-v4.sh --dry-run --only core
    
    - name: Test cleanup dry run
      run: |
        ./scripts/cleanup.sh --dry-run

  validate-config:
    name: Validate Configuration
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install yq
      run: |
        wget -O yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        chmod +x yq
        sudo mv yq /usr/local/bin/
    
    - name: Validate config.yaml
      run: |
        # Check if config.yaml is valid YAML
        yq eval '.' config.yaml > /dev/null
        
        # Check required fields
        yq eval '.metadata.name' config.yaml
        yq eval '.metadata.version' config.yaml
        yq eval '.config.log_level' config.yaml
        yq eval '.packages.core.brew' config.yaml
        yq eval '.packages.core.cask' config.yaml

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check for secrets in scripts
      run: |
        # Check for hardcoded secrets
        if grep -r -i "password\|secret\|key\|token" scripts/ --exclude-dir=.git; then
          echo "Potential secrets found in scripts"
          exit 1
        fi

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate README
      run: |
        # Install yq
        wget -O yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        chmod +x yq
        sudo mv yq /usr/local/bin/
        
        # Generate README
        ./scripts/generate-readme-auto-category.sh
    
    - name: Check for README changes
      run: |
        if git diff --exit-code docs/README_GENERATED.md; then
          echo "README is up to date"
        else
          echo "README needs to be regenerated"
          exit 1
        fi









